name: "Pyret"
scopeName: "source.arr"
fileTypes: [
  "arr"
]
patterns: [
  {
    comment: "Delimiters"
    match: "(!|->|=>|:=|\\[|\\]|{|}|:\\s)"
    name: "keyword.other.delimiters.arr"
  }
  {
    comment: "()"
    match: "(\\(|\\)|\\.|::|=)"
    name: "variable.arr"
  }
  {
    comment: false
    match: "(\\|)"
    name: "storage.type.delimiters.arr"
  }
  {
    comment: "Basic keywords"
    match: "(?<!-)(\\b|^)(var|end|type|type-let|newtype|include|import|provide|provide-types|fun|lam|check:|where:|examples:|doc:|is==|is=~|is<=>|is-not==|is-not=~|is-not<=>|is|is-not|raises|satisfies|violates|does-not-raise|raises-violates|raises-satisfies|raises-other-than|data|method|with:|sharing:|as|when|for|from|and|or|not|if|else|deriving|ref|block:|shadow|let|letrec|rec|cases|ask|then:|otherwise:)(?!-)(\\b|$)"
    name: "keyword.operators.arr"
  }
  {
    comment: "operators"
    match: "( \\+ | - | \\/ | \\* | > | < | >= | <= | <> )"
    name: "keyword.operator.arr"
  }
  {
    comment: "multi-line comments"
    begin: "(#\\|)"
    end: "(\\|#)"
    name: "comment.block.arr"
  }
  {
    comment: "comments"
    match: "\\#.*$"
    name: "comment.line.number-sign.arr"
  }
  {
    comment: "double quoted strings"
    match: "\"[^\"]*\""
    name: "string.arr"
  }
  {
    comment: "single quoted strings"
    match: "'[^']*'"
    name: "string.arr"
  }
  {
    comment: "triple quoted strings"
    begin: "```"
    end: "```"
    name: "string.arr"
  }
  {
    comment: "unterminated double quoted string"
    match: "\"[^\"]*$"
    name: "invalid.illegal"
  }
  {
    comment: "unterminated single quoted string"
    match: "'[^']*$"
    name: "invalid.illegal"
  }
  {
    comment: "numbers"
    match: "(?<![a-zA-Z0-9_-])-?[0-9]+([/.][0-9]+)?"
    name: "constant.numeric.arr"
  }
  {
    comment: "rough numbers"
    match: "(?<![a-zA-Z0-9_-])~-?[0-9]+(\\.[0-9]+)?"
    name: "constant.other.arr"
  }
]
